{
  "compilerOptions": {
    /* Basic Options */
    "target": "esnext", // Target latest ECMAScript features
    "module": "esnext", // Use ESNext as module code generation to enable ES modules
    "lib": [
      "dom",
      "esnext"
    ], // Include DOM and latest ECMAScript features
    "outDir": "../dist", // Redirect output structure to the directory
    "tsBuildInfoFile": "./.tsbuildinfo",
    "allowJs": false, // Do not allow JavaScript files to be compiled
    "checkJs": false, // Disable type-checking of JS files (useful if allowJs is true)
    "jsx": "preserve", // Preserves JSX to be transformed by Babel or another transpiler
    "declaration": true, // Generates corresponding '.d.ts' file for each TypeScript file
    "declarationMap": true, // Generates a sourcemap for each corresponding '.d.ts' file
    "sourceMap": true, // Generates corresponding '.map' file
    "composite": true, // Enable project compilation
    "incremental": true, // Enable incremental compilation
    "emitDecoratorMetadata": true, // Emit design-type metadata for decorated declarations in source
    "experimentalDecorators": true, // Enables experimental support for ES7 decorators
    "moduleResolution": "bundler", // Choose the module resolution strategy: 'node' for Node.js
    "esModuleInterop": true, // Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports
    "forceConsistentCasingInFileNames": true, // Disallow inconsistently-cased references to the same file
    /* Strict Type-Checking Options */
    "skipLibCheck": true,
    "strict": true, // Enable all strict type-checking options
    "noImplicitAny": true, // Raise error on expressions and declarations with an implied 'any' type
    "strictNullChecks": true, // Enable strict null checks
    "strictFunctionTypes": true, // Enable strict checking of function types
    "strictBindCallApply": true, // Enable strict 'bind', 'call', and 'apply' methods on functions
    "strictPropertyInitialization": true, // Ensure non-undefined class properties are initialized in the constructor
    "noImplicitThis": true, // Raise error on 'this' expressions with an implied 'any' type
    "alwaysStrict": true, // Parse in strict mode and emit "use strict" for each source file
    /* Additional Checks */
    "noUnusedLocals": true, // Report errors on unused locals
    "noUnusedParameters": true, // Report errors on unused parameters
    "noImplicitReturns": true, // Report error when not all code paths in function return a value
    "noFallthroughCasesInSwitch": true, // Report errors for fallthrough cases in switch statement
    "noUncheckedIndexedAccess": true, // Include 'undefined' in the index signature results
  }
}
